/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CHECK_H_RPCGEN
#define _CHECK_H_RPCGEN
#define USERS_ID_LENGTH 16
#define ERROR_LENGTH 40 //must be greater than USERS_ID_LENGTH
#define LINE_LENGTH 256
#define SIGNED_TOKEN_LEN 30

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct request_authorization {
	char *client_id;
	char *token;
};
typedef struct request_authorization request_authorization;

struct request_access_token {
	char *access_token;
	char *regenerate_token;
	int auto_refresh;
	int validation_time;
};
typedef struct request_access_token request_access_token;

struct validate_delegated_action {
	char *operation_type;
	char *accessed_resource;
	char *token;
};
typedef struct validate_delegated_action validate_delegated_action;

struct approvals_database {
	char* name;
	int8_t read;
	int8_t insert;
	int8_t modify;
	int8_t delete;
	int8_t execute;
};

typedef struct approvals_database ApprovalsDB;

struct signed_token_permisions {
	char* token;
	ApprovalsDB* approvals;
};

typedef struct signed_token_permisions SignedTokenPermisions;

struct users_id_database {
	unsigned int number_of_users;
	char** users;
	request_authorization* authz_tokens;
	unsigned int number_of_authz_tokens;
	char** resources;
	unsigned int number_of_resources;
	ApprovalsDB** approvals;
	unsigned int number_of_approvals_lines;
	unsigned int number_of_approvals_colums;
	SignedTokenPermisions* signed_tokens_permisions;
	unsigned int number_of_signed_tokens_permisions;
};

typedef struct users_id_database UsersIdDB;


#define CHECKPROG 0x1DBC0
#define CHECKVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define request_authorization_func 1
extern  char ** request_authorization_func_1(char **, CLIENT *);
extern  char ** request_authorization_func_1_svc(char **, struct svc_req *);
#define request_access_token_func 2
extern  struct request_access_token * request_access_token_func_1(struct request_authorization *, CLIENT *);
extern  struct request_access_token * request_access_token_func_1_svc(struct request_authorization *, struct svc_req *);
#define validate_delegated_action_func 3
extern  char ** validate_delegated_action_func_1(struct validate_delegated_action *, CLIENT *);
extern  char ** validate_delegated_action_func_1_svc(struct validate_delegated_action *, struct svc_req *);
#define approve_request_token_func 4
extern  char ** approve_request_token_func_1(char **, CLIENT *);
extern  char ** approve_request_token_func_1_svc(char **, struct svc_req *);
extern int checkprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define request_authorization_func 1
extern  char ** request_authorization_func_1();
extern  char ** request_authorization_func_1_svc();
#define request_access_token_func 2
extern  struct request_access_token * request_access_token_func_1();
extern  struct request_access_token * request_access_token_func_1_svc();
#define validate_delegated_action_func 3
extern  char ** validate_delegated_action_func_1();
extern  char ** validate_delegated_action_func_1_svc();
#define approve_request_token_func 4
extern  char ** approve_request_token_func_1();
extern  char ** approve_request_token_func_1_svc();
extern int checkprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_request_authorization (XDR *, request_authorization*);
extern  bool_t xdr_request_access_token (XDR *, request_access_token*);
extern  bool_t xdr_validate_delegated_action (XDR *, validate_delegated_action*);

#else /* K&R C */
extern bool_t xdr_request_authorization ();
extern bool_t xdr_request_access_token ();
extern bool_t xdr_validate_delegated_action ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CHECK_H_RPCGEN */
